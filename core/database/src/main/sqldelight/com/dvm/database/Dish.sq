CREATE TABLE IF NOT EXISTS dish(
    id TEXT NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    description TEXT,
    image TEXT NOT NULL,
    oldPrice INTEGER AS Int NOT NULL,
    price INTEGER AS Int NOT NULL,
    rating REAL AS Double NOT NULL,
    commentsCount INTEGER AS Int NOT NULL,
    likes INTEGER AS Int NOT NULL,
    category TEXT NOT NULL
);


dish:
SELECT
    dish.*,
    EXISTS(
        SELECT 1
        FROM favorite
        WHERE favorite.dishId = dish.id
    ) AS isFavorite
FROM dish
WHERE id = :dishId;


dishes:
SELECT
    dish.*,
    EXISTS(
        SELECT 1
        FROM favorite
        WHERE favorite.dishId = dish.id
    ) AS isFavorite
FROM dish
WHERE category IS :category;


searchDish:
SELECT
    dish.*,
    EXISTS(
        SELECT 1
        FROM favorite
        WHERE favorite.dishId = dish.id
    ) AS isFavorite
FROM dish
WHERE name LIKE '%' || :query || '%'
ORDER BY name;


hasSpecialOffers:
SELECT EXISTS(
    SELECT 1
    FROM dish
    WHERE oldPrice > 0
);


specialOffersDish:
SELECT
    dish.*,
    EXISTS(
        SELECT 1
        FROM favorite
        WHERE favorite.dishId = dish.id
    ) AS isFavorite
FROM dish
WHERE oldPrice > price;


recommendedDishes:
SELECT
    dish.*,
    EXISTS(
        SELECT 1
        FROM favorite
        WHERE favorite.dishId = dish.id
    ) AS isFavorite
FROM dish
JOIN recommended ON id = recommended.dishId;


bestDishes:
SELECT
    dish.*,
    EXISTS(
        SELECT 1
        FROM favorite
        WHERE favorite.dishId = dish.id
    ) AS isFavorite
FROM dish
WHERE rating > 3.5
LIMIT 10;


popularDishes:
SELECT
    dish.*,
    EXISTS(
        SELECT 1
        FROM favorite
        WHERE favorite.dishId = dish.id
    ) AS isFavorite
FROM dish
WHERE id IN (
    SELECT id
    FROM dish
    ORDER BY likes DESC
    LIMIT 10
);


favoriteDishes:
SELECT
    dish.*,
    EXISTS(
        SELECT 1
        FROM favorite
        WHERE favorite.dishId = dish.id
    ) AS isFavorite
FROM dish
WHERE id IN (
    SELECT dishId
    FROM favorite
);


insert:
INSERT OR REPLACE INTO dish(
   id,
   name,
   description,
   image,
   oldPrice,
   price,
   rating,
   commentsCount,
   likes,
   category
)
VALUES ?;